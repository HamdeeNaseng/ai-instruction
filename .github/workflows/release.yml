name: Release
on:
  push:
    tags:
      - "v*.*.*"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pytest

      - name: Run tests
        run: |
          pytest tests/ -v
        env:
          ANTHROPIC_API_KEY: "mock-api-key-for-testing"

  build-and-publish:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write # For trusted publishing to PyPI

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: |
          python -m build

      - name: Check package
        run: |
          twine check dist/*

      - name: Extract release notes
        id: extract-release-notes
        run: |
          # Extract version from tag
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

          # Create release notes
          cat > release_notes.md << EOF
          # Claude API Demos v$VERSION

          ## What's New

          This release includes improvements and updates to the Claude API demonstration suite.

          ## Installation

          \`\`\`bash
          pip install claude-api-demos==$VERSION
          \`\`\`

          ## Quick Start

          \`\`\`bash
          # Set your API key
          export ANTHROPIC_API_KEY="your-key-here"

          # Run interactive demo menu
          python -m claude_api_demos.cli

          # Or use the demo runner
          claude-demos
          \`\`\`

          ## Full Changelog

          See the [commit history](https://github.com/${{ github.repository }}/compare/v${{ steps.extract-release-notes.outputs.previous_version }}...v$VERSION) for detailed changes.
          EOF

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/*
          body_path: release_notes.md
          tag_name: ${{ github.ref_name }}
          name: Claude API Demos ${{ steps.extract-release-notes.outputs.version }}
          draft: false
          prerelease: false

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          # Uses OIDC trusted publishing - no API token needed
          # Repository must be configured in PyPI
          repository-url: https://upload.pypi.org/legacy/

  create-docker-image:
    needs: [test, build-and-publish]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Create Dockerfile
        run: |
          cat > Dockerfile << 'EOF'
          FROM python:3.11-slim

          WORKDIR /app

          # Install system dependencies
          RUN apt-get update && apt-get install -y \
              git \
              && rm -rf /var/lib/apt/lists/*

          # Copy and install package
          COPY . .
          RUN pip install --no-cache-dir -e .

          # Create non-root user
          RUN useradd -m -u 1000 claude && chown -R claude:claude /app
          USER claude

          # Set environment variables
          ENV PYTHONPATH=/app/src
          ENV PYTHONUNBUFFERED=1

          # Default command
          CMD ["python", "-m", "claude_api_demos.cli"]
          EOF

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  notify-success:
    needs: [build-and-publish, create-docker-image]
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Send success notification
        run: |
          echo "🎉 Release ${{ github.ref_name }} published successfully!"
          echo "📦 Package: https://pypi.org/project/claude-api-demos/"
          echo "🐳 Docker: ghcr.io/${{ github.repository }}:${{ github.ref_name }}"
